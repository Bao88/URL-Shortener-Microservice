 /******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/

'use strict';

var fs = require('fs');
var express = require('express');
var app = express();
var mongodb = require("mongodb");

// --------------------------------- Freecodecamp ---------------------------------
if (!process.env.DISABLE_XORIGIN) {
  app.use(function(req, res, next) {
    var allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com'];
    var origin = req.headers.origin || '*';
    if(!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1){
         console.log(origin);
         res.setHeader('Access-Control-Allow-Origin', origin);
         res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    }
    next();
  });
}

app.use('/public', express.static(process.cwd() + '/public'));

app.route('/_api/package.json')
  .get(function(req, res, next) {
    console.log('requested');
    fs.readFile(__dirname + '/package.json', function(err, data) {
      if(err) return next(err);
      res.type('txt').send(data.toString());
    });
  });
  
// --------------------------------- mycode ---------------------------------
var uri = process.env.MONGODB, retStr = "", myDB= null, collection= null;
mongodb.MongoClient.connect(uri, function(err, database){
  if(err) throw err;
  retStr+="Connecting to "+process.env.DB;
  
//   Connect to the database
  myDB = database.db(process.env.DB);
  collection = myDB.collection(process.env.DB); //Create a reference to the collection
  console.log(collection);
  // database = db.collection(process.env.DB);
});

// Create a new shortened url and store it in mongoDB
app.route('/new/').get(function(req, res) {
  // console.log(uri);
  // collection.insert({ _id: });
		  res.send("create new short url");
})

// Retrieve url from the mongoDB with the shortened url
app.route('/([0-9]+)').get(function(req, res) {
		  res.send("redirect url");
})

// --------------------------------- end mycode ---------------------------------

app.route('/')
    .get(function(req, res) {
		  res.sendFile(process.cwd() + '/views/index.html');
})

// Respond not found to all the wrong routes
app.use(function(req, res, next){
  res.status(404);
  res.type('txt').send('Not found');
});

// Error Middleware
app.use(function(err, req, res, next) {
  if(err) {
    res.status(err.status || 500)
      .type('txt')
      .send(err.message || 'SERVER ERROR');
  }  
})

app.listen(process.env.PORT, function () {
  console.log('Node.js listening ...');
});

// --------------------------------- Freecodecamp ---------------------------------
